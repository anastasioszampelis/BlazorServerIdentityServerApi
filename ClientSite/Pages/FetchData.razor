@page "/fetchdata"

@using ClientSite.Data
@using ClientShared
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null && DataCouldNotBeFetched == false)
{
    <p><em>Loading...</em></p>
}
else if (forecasts == null && DataCouldNotBeFetched == true)
{
    <p><em>@ErrorMessage</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;
    private bool DataCouldNotBeFetched { get; set; } = false;
    private string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await ForecastService.GetForecastAsync(DateTime.Now);
        if (response.Item1)
        {
            forecasts = response.Item2;
        }
        else
        {
            ErrorMessage = response.Item3;
            DataCouldNotBeFetched = true;
        }
    }
}
